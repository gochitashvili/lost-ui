{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "file-upload-01",
  "type": "registry:block",
  "title": "File Upload with Preview",
  "description": "A file upload with preview block.",
  "author": "Gocha Gochitashvili <https://lost-ui.vercel.app>",
  "registryDependencies": [
    "button",
    "card",
    "input",
    "label",
    "select",
    "tooltip"
  ],
  "dependencies": ["lucide-react"],
  "files": [
    {
      "path": "content/components/file-upload/file-upload-01.tsx",
      "type": "registry:component",
      "target": "components/file-upload-01.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { cn } from \"@/lib/utils\";\nimport { HelpCircle, Trash2, Upload } from \"lucide-react\";\nimport { useRef, useState } from \"react\";\n\nexport default function FileUpload01() {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [uploadedFiles, setUploadedFiles] = useState<File[]>([]);\n  const [fileProgresses, setFileProgresses] = useState<Record<string, number>>(\n    {}\n  );\n\n  const handleFileSelect = (files: FileList | null) => {\n    if (!files) return;\n\n    const newFiles = Array.from(files);\n    setUploadedFiles((prev) => [...prev, ...newFiles]);\n\n    // Simulate upload progress for each file\n    newFiles.forEach((file) => {\n      let progress = 0;\n      const interval = setInterval(() => {\n        progress += Math.random() * 10;\n        if (progress >= 100) {\n          progress = 100;\n          clearInterval(interval);\n        }\n        setFileProgresses((prev) => ({\n          ...prev,\n          [file.name]: Math.min(progress, 100),\n        }));\n      }, 300);\n    });\n  };\n\n  const handleBoxClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    handleFileSelect(e.dataTransfer.files);\n  };\n\n  const removeFile = (filename: string) => {\n    setUploadedFiles((prev) => prev.filter((file) => file.name !== filename));\n    setFileProgresses((prev) => {\n      const newProgresses = { ...prev };\n      delete newProgresses[filename];\n      return newProgresses;\n    });\n  };\n\n  return (\n    <div className=\"flex items-center justify-center p-10\">\n      <Card className=\"w-full mx-auto max-w-lg bg-background rounded-lg p-0 shadow-md\">\n        <CardContent className=\"p-0\">\n          <div className=\"p-6 pb-4\">\n            <div className=\"flex justify-between items-start\">\n              <div>\n                <h2 className=\"text-lg font-medium text-foreground\">\n                  Create a new project\n                </h2>\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                  Drag and drop files to create a new project.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"px-6 pb-4 mt-2\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"projectName\" className=\"mb-2\">\n                  Project name\n                </Label>\n                <Input\n                  id=\"projectName\"\n                  type=\"text\"\n                  defaultValue=\"Open Source Stripe\"\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"projectLead\" className=\"mb-2\">\n                  Project lead\n                </Label>\n                <Select defaultValue=\"1\">\n                  <SelectTrigger id=\"projectLead\" className=\"ps-2 w-full\">\n                    <SelectValue placeholder=\"Select project lead\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectGroup>\n                      <SelectItem value=\"1\">\n                        <img\n                          className=\"size-5 rounded\"\n                          src=\"https://lost-ui.vercel.app/avatar-01.png\"\n                          alt=\"Gocha Gochitashvili\"\n                          width={20}\n                          height={20}\n                        />\n                        <span className=\"truncate\">Gocha Gochitashvili</span>\n                      </SelectItem>\n                      <SelectItem value=\"2\">\n                        <img\n                          className=\"size-5 rounded\"\n                          src=\"https://lost-ui.vercel.app/avatar-03.png\"\n                          alt=\"Lucas Smith\"\n                          width={20}\n                          height={20}\n                        />\n                        <span className=\"truncate\">Lucas Smith</span>\n                      </SelectItem>\n                      <SelectItem value=\"3\">\n                        <img\n                          className=\"size-5 rounded\"\n                          src=\"https://lost-ui.vercel.app/avatar-02.jpg\"\n                          alt=\"Timur Ercan\"\n                          width={20}\n                          height={20}\n                        />\n                        <span className=\"truncate\">Timur Ercan</span>\n                      </SelectItem>\n                    </SelectGroup>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"px-6\">\n            <div\n              className=\"border-2 border-dashed border-border rounded-md p-8 flex flex-col items-center justify-center text-center cursor-pointer\"\n              onClick={handleBoxClick}\n              onDragOver={handleDragOver}\n              onDrop={handleDrop}\n            >\n              <div className=\"mb-2 bg-muted rounded-full p-3\">\n                <Upload className=\"h-5 w-5 text-muted-foreground\" />\n              </div>\n              <p className=\"text-sm font-medium text-foreground\">\n                Upload a project image\n              </p>\n              <p className=\"text-sm text-muted-foreground mt-1\">\n                or,{\" \"}\n                <label\n                  htmlFor=\"fileUpload\"\n                  className=\"text-primary hover:text-primary/90 font-medium cursor-pointer\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  click to browse\n                </label>{\" \"}\n                (4MB max)\n              </p>\n              <input\n                type=\"file\"\n                id=\"fileUpload\"\n                ref={fileInputRef}\n                className=\"hidden\"\n                accept=\"image/*\"\n                onChange={(e) => handleFileSelect(e.target.files)}\n              />\n            </div>\n          </div>\n\n          <div\n            className={cn(\n              \"px-6 pb-5 space-y-3\",\n              uploadedFiles.length > 0 ? \"mt-4\" : \"\"\n            )}\n          >\n            {uploadedFiles.map((file, index) => {\n              const imageUrl = URL.createObjectURL(file);\n\n              return (\n                <div\n                  className=\"border border-border rounded-lg p-2 flex flex-col\"\n                  key={file.name + index}\n                  onLoad={() => {\n                    return () => URL.revokeObjectURL(imageUrl);\n                  }}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-18 h-14 bg-muted rounded-sm flex items-center justify-center self-start row-span-2 overflow-hidden\">\n                      <img\n                        src={imageUrl}\n                        alt={file.name}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n\n                    <div className=\"flex-1 pr-1\">\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"flex items-center gap-2\">\n                          <span className=\"text-sm text-foreground truncate max-w-[250px]\">\n                            {file.name}\n                          </span>\n                          <span className=\"text-sm text-muted-foreground whitespace-nowrap\">\n                            {Math.round(file.size / 1024)} KB\n                          </span>\n                        </div>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-8 w-8 bg-transparent! hover:text-red-500\"\n                          onClick={() => removeFile(file.name)}\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"h-2 bg-muted rounded-full overflow-hidden flex-1\">\n                          <div\n                            className=\"h-full bg-primary\"\n                            style={{\n                              width: `${fileProgresses[file.name] || 0}%`,\n                            }}\n                          ></div>\n                        </div>\n                        <span className=\"text-xs text-muted-foreground whitespace-nowrap\">\n                          {Math.round(fileProgresses[file.name] || 0)}%\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"px-6 py-3 border-t border-border bg-muted rounded-b-lg flex justify-between items-center\">\n            <TooltipProvider delayDuration={0}>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"flex items-center text-muted-foreground hover:text-foreground\"\n                  >\n                    <HelpCircle className=\"h-4 w-4 mr-1\" />\n                    Need help?\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent className=\"py-3 bg-background text-foreground border\">\n                  <div className=\"space-y-1\">\n                    <p className=\"text-[13px] font-medium\">Need assistance?</p>\n                    <p className=\"text-muted-foreground dark:text-muted-background text-xs max-w-[200px]\">\n                      Upload project images by dragging and dropping files or\n                      using the file browser. Supported formats: JPG, PNG, SVG.\n                      Maximum file size: 4MB.\n                    </p>\n                  </div>\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n\n            <div className=\"flex gap-2\">\n              <Button\n                variant=\"outline\"\n                className=\"h-9 px-4 text-sm font-medium\"\n              >\n                Cancel\n              </Button>\n              <Button className=\"h-9 px-4 text-sm font-medium\">Continue</Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"
    }
  ],
  "categories": ["file-upload"]
}
